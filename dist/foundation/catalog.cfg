# Set the sitewide information. The initial settings
# in the "variable" table are shown below; subsequent
# changes are only in the database, not below.

VariableDatabase variable

# This allows a template to drop in some beginning config
# There also is an ending config
include etc/before.cfg

Require module Digest::MD5    "Need %s %s for better cache keys."
Require module Safe::Hole
Require module SQL::Statement
Require module LWP::Simple

Require UserTag   email email_raw var loc table_editor button

ParseVariables Yes

ifdef LOGDIR
ErrorFile       __LOGDIR__/error.log
AsciiTrack      __LOGDIR__/tracking.asc
TrackFile       __LOGDIR__/usertrack
endif

ifndef LOGDIR
AsciiTrack      logs/tracking.asc
TrackFile       logs/usertrack
endif

ifdef CACHEDIR
SessionDatabase __CACHEDIR__/session
ScratchDir      __CACHEDIR__/tmp
endif

ifndef CACHEDIR
SessionDatabase session
ScratchDir      tmp
endif

#ifdef SOMESQL
Require module DBI
#endif

#ifdef MYSQL
Require module DBD::mysql
#endif

#ifdef PGSQL
Require module DBD::Pg
#endif

#ifdef ORACLE
Require module DBD::Oracle
#endif

ParseVariables  Yes

#########
######### Set the catalog URLS, using the Variable settings above.
#########
##
## The URLs which are written to call the CGI link script.
## 
VendURL                 http://__SERVER_NAME____CGI_URL__
SecureURL               __SECURE_SERVER____CGI_URL__

ifndef SECURE_ENABLED
SecureURL               http://__SERVER_NAME____CGI_URL__
endif

## Set the image path for relative images
ImageDir                __IMAGE_DIR__/
ImageDirInternal        http://__SERVER_NAME____IMAGE_DIR__/

##
#########
######### 
#########

#########
######### Some user session related settings...
#########
#
#

## Whether to encrypt passwords in UserDB
## We usually don't for users, so we can mail them their password
## We DO in admin, that is set in catalog_after.cfg
UserDB    default    crypt         0

## Change a field to something that doesn't conflict in MySQL
UserDB    default    time_field    mod_time

## Don't want people setting their credit limit or dealer status directly
UserDB    default    scratch       "dealer price_level credit_limit"

### minimal login stuff for affiliate
UserDB    affiliate  user_field    affiliate
UserDB    affiliate  database      affiliate
UserDB    affiliate  time_field    none
UserDB    affiliate  crypt         0

## Set some initial values
ScratchDefault   mv_add_dot_html   1
ScratchDefault   mv_no_session_id  1
ScratchDefault   mv_no_count       1
ScratchDefault   order_style       1
ValuesDefault    mv_shipmode       __SHIP_DEFAULT_DOM__
ValuesDefault    show_basket       1

################################################################

# Here we set up the catalog theme

ifndef STYLE
Variable STYLE default
endif
ParseVariables Yes
include templates/__STYLE__/theme.cfg

################################################################

ParseVariables  Yes

# Sets Interchange to not parse <BODY MV="body 1"> and other tags within
# HTML tags, use [pragma no_html_parse 0] to enable on a page
Pragma          no_html_parse

MailOrderTo             __ORDERS_TO__


################################################################
########   DATABASE SETUP                               ########
########                                                ########
########   When you defined your catalog, you specified ########
########   a database type. This region uses #include   ########
########   to include the database definitions based    ########
########   on that choice.                              ########
########                                                ########
########   See the directories in dbconf/ for the       ########
########   different types.                             ########
########                                                ########
################################################################
##
##

#ifndef SQLDSN
Variable    SQLDSN          __MVC_SQLDSN__
#endif

#####
##### MySQL
#####
#ifdef MYSQL

Message Using MySQL, DSN=__SQLDSN__.

# Tell the default DBM we are using something else...
Variable  SOME_DATABASE  1

# Uncomment if needed
#Variable  SQLUSER  foo
#Variable  SQLPASS  bar

# The table defs are in separate files in the dbconf/mysql directory,
# the ones kept in DBM are in TABLENAME.dbm files.

#include dbconf/mysql/*

#endif

#####
##### PostgreSQL
#####
#ifdef PGSQL

Message Using PostgreSQL, DSN=__SQLDSN__.

# Tell the default DBM we are using something else...
Variable  SOME_DATABASE  1

# Uncomment and edit if needed
#Variable  SQLUSER  foo
#Variable  SQLPASS  bar

# The table defs are in separate files in the dbconf/pgsql directory,
# the ones kept in DBM are in TABLENAME.dbm files.

#include dbconf/pgsql/*

#endif

#####
##### Oracle
#####
#ifdef ORACLE

Message Using Oracle, DSN=__SQLDSN__.

# Tell the default DBM we are using something else...
Variable  SOME_DATABASE  1

# Oracle considers 'session', 'size', and 'comment' to be reserved
# words. Since we use those as column names, attach this arbitrary
# string to the end of each word to make it acceptable to Oracle.
# Note that this must be defined before the #include below.
Variable  FIELDMUNGE  

# Uncomment and edit if needed
#Variable  SQLUSER  foo
#Variable  SQLPASS  bar

# The table defs are in separate files in the dbconf/oracle directory,
# the ones kept in DBM are in TABLENAME.dbm files.

#include dbconf/oracle/*

#endif

#####
##### Default DBM if nothing else defined
#####
#ifndef SOME_DATABASE

# The table defs are in separate files in the dbconf/dbm directory.

Message Using default DBM database.
#include dbconf/default_db/*

#endif

ProductFiles   products

##
##
################################################################
########                end database setup               #######
################################################################

AlwaysSecure         ord/checkout multi/checkout


PriceField     0
CommonAdjust   :sale_price, ;:price, ;$, ==:options

########                                                 #######
################################################################

## Set this to No if you don't want auto-login capability for users
CookieLogin  Yes

EncryptProgram   __ENCRYPTOR__

Locale          en_US LC_CTYPE C
LocaleDatabase  locale

OrderCounter    etc/order.number
OrderLineLimit  200
OrderProfile    etc/profiles.order etc/profiles.login etc/profiles.misc

# Allow others in our group to read/write files by default
ReadPermission  group
WritePermission group
RobotLimit      100

ActionMap  deliver   <<EOR
sub {
	my $deliverable = shift;
	$Scratch->{deliverable} = $CGI->{mv_arg};
	$CGI->{mv_nextpage} = 'deliver';
	return 1;
}
EOR

ActionMap  get_password   <<EOR
sub {
	$Config->{NoSearch} = '';
	$CGI->{mv_nextpage} = $CGI->{mv_search_page} = 'action/get_password';
	$CGI->{mv_todo} = 'search';
	$Tag->update('process');
	return 1;
}
EOR

ParseVariables Yes
Route log         attach          0
Route log         cybermode       ""
Route log         empty           1
Route log         encrypt         0
Route log         increment       0
Route log         report          etc/log_transaction
Route log         supplant        0
Route log         track           logs/log

Route log_entry   attach          0
Route log_entry   cybermode       ""
Route log_entry   empty           1
Route log_entry   encrypt         0
Route log_entry   increment       0
Route log_entry   report          etc/log_entry
Route log_entry   supplant        0
Route log_entry   track           logs/log

Route copy_user   attach          0
Route copy_user   cybermode       ""
Route copy_user   empty           1
Route copy_user   encrypt         0
Route copy_user   increment       0
Route copy_user   report          etc/mail_receipt
Route copy_user   supplant        0
Route copy_user   track           logs/log

# Main route must be last to make default
Route main        attach           0
Route main        credit_card      0
Route main        cybermode        ""
Route main        default          1
Route main        email            '__ORDERS_TO__'
Route main        encrypt          0
Route main        encrypt_program  '__ENCRYPTOR__'
Route main        errors_to        '__ORDERS_TO__'
Route main        increment        0
Route main        pgp_cc_key       ""
Route main        pgp_key          ""
Route main        receipt          etc/receipt.html
Route main        report           etc/report
Route main        supplant         1
Route main        individual_track orders
Route main        track            logs/tracking.asc

# Order routes can be maintained in a database, empty in demo
# CHANGES TO THIS WILL OVERRIDE THE ROUTES ABOVE
RouteDatabase    route

SalesTax         __TAXFIELD__
TaxShipping      __TAXSHIPPING__
SeparateItems    Yes

SpecialPage          catalog        index
SpecialPage          report         ../etc/report
SpecialPage          receipt        ../etc/receipt

NoCache              <<EOF
	admin
	login
	account
	logout
	config
	multi
	ord/basket
	ord/checkout
	query
	reconfig
	special
EOF

Static        __CATALOG_STATIC__
StaticLogged  __LOGGED_STATIC__
StaticAll     Yes
StaticDBM     static
StaticDepth   2
StaticDir     __SAMPLEHTML__/pages
StaticFly     Yes
StaticPath    __SAMPLEURL__/pages

#ifdef UI_TRAFFIC_STATS
TrackFile __UI_TRAFFIC_STATS__
#endif

History 10
UserTag history-scan Order find exclude default
UserTag history-scan addAttr
UserTag history-scan Routine <<EOR
my %var_exclude = ( qw/
	mv_credit_card_number 1
	mv_pc                 1
	mv_session_id         1
/);
sub {
	my ($find, $exclude, $default) = @_;
	my $ref = $Vend::Session->{History}
		or return $Tag->area($default || $Config->{SpecialPage}{catalog});
	my ($hist, $href, $cgi);
	$exclude = qr/$exclude/ if $exclude;
	for(my $i = $#$ref; $i >= 0; $i--) {
		#Log("checking $ref->[$i][0] for $exclude");
		if ($exclude and $ref->[$i][0] =~ $exclude) {
			next;
		}
		if($find) {
			next unless $ref->[$i][0] =~ /$find/;
		}
		($href, $cgi) = @{$ref->[$i]};
		last;
	}
	return $Tag->area($default || $Config->{SpecialPage}{catalog})
		if ! $href;
	my $form = '';
	for(grep !$var_exclude{$_}, keys %$cgi) {
		$form .= "\n$_=";
		$form .= join("\n$_=", split /\0/, $cgi->{$_});
	}
	return $Tag->area( { href => $href, form => $form} );
}
EOR

# This allows a template to drop in some ending config
# There also is an beginning config
include etc/after.cfg
