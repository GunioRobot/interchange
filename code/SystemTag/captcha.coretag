UserTag captcha Order function
UserTag captcha addAttr
UserTag captcha Description Generate captcha codes for authentication check
UserTag captcha Routine <<EOR
my $Have_Captcha;
eval {
	require Authen::Captcha;
	$Have_Captcha = 1;
};

sub {
	my ($func, $opt) = @_;

	use vars qw/$Tag/;

	if(! $Have_Captcha) {
		::logError("Use of captcha tag without Authen::Captcha, skipping");
		return '';
	}
	
	$func = lc($func);
	$func =~ s/[^a-z]+//g;
	my $result = '';
	if($func eq 'code') {
		$result = $Vend::Session->{captcha};
	}

	$opt->{length} ||= 4;
	my $en = $opt->{error_name} || 'captcha';

	my $subdir = $opt->{image_subdir}
				 || $::Variable->{CAPTCHA_IMAGE_SUBDIR}
				 || 'captcha';
	my $tmpdir = $opt->{tmpdir}
				 || "$Vend::Cfg->{ScratchDir}/$subdir";

	mkdir($tmpdir) 
		unless -d $tmpdir;

	my $imgdir = $opt->{image_location}
				 || $::Variable->{CAPTCHA_IMAGE_LOCATION}
				 || "$::Variable->{DOCROOT}$::Variable->{IMAGE_DIR}/$subdir";
	my $imgpath = $opt->{image_path}
				 || $::Variable->{CAPTCHA_IMAGE_PATH}
				 || "$::Variable->{IMAGE_DIR}/$subdir";

	
	my $captcha = Authen::Captcha->new(
					data_folder => $tmpdir,
					output_folder => $imgdir,
				);

	my $guess   = $opt->{guess} || $CGI::values{mv_captcha_guess};
	my $code    = $opt->{source};

	if($func eq 'check') {

		my $check_against = $code || $Vend::Session->{captcha};
		my $status = $captcha->check_code($guess, $check_against);
		if($status > 0) {
			return $status;
		}
		elsif($status == 0) {
			$Tag->error( { name => $en, set => "Code not checked: error" });
			return 0;
		}
		elsif($status == -1) {
			$Tag->error( { name => $en, set => "Code expired" });
			return 0;
		}
		elsif($status == -2) {
			$Tag->error( { name => $en, set => "Code never generated" });
			return 0;
		}
		elsif($status == -3) {
			$Tag->error( { name => $en, set => "Code doesn't match" });
			return 0;
		}
	}
	else {
	    my $save_u = umask($::Variable->{CAPTCHA_UMASK} || 2);

		if($func eq 'code') {
			$code ||= $Vend::Session->{captcha};
			return $code if $code;
		}

	   eval {
		if(! $code) {
			$code = $Vend::Session->{captcha} = $captcha->generate_code($opt->{length});
			$Vend::Captcha = $code;
		}
		umask $save_u;
	   };

		if($@) {
			$Tag->error( { name => $en, set => "Error: $@" });
			return '';
		}

		if($func eq 'code') {
			return $code;
		}
	
		if($func =~ /^rel(ative)?ima?ge?$/) {
			return "$subdir/$code.png";
		}
		if($func =~ /^ima?ge?$/) {
			return "$imgpath/$code.png";
		}
		if($func =~ /^ima?ge?.*tag/) {
			return 	$Tag->image("$imgpath/$code.png");
		}
	}

}
EOR

UserTag captcha Documentation <<EOD
=head1 NAME

Interchange [captcha] tag

=head1 SYNOPSIS

  [captcha  function="check|code|image|relative_image|image_tag"
            length="4"
            image-subdir="captcha"
            image-location="/var/www/html/standard/images/captcha"
            image-path="/standard/images/captcha"
            source="[cgi mv_captcha_source]"
            error-name="captcha"
            guess="[cgi mv_captcha_guess]"
        ]

=head1 DESCRIPTION

This tag generates and/or checks "captcha" images to authenticate user input.
If called for the first time in a page, it generates a code/image pair and
sets the code in the session (at $Vend::Session->{captcha}).

There are several functions.

=over 4

=item check

Checks the captcha source code (presumably from the previous page) against
the guess. If it matches, returns 1. If not, returns 0 and puts error
in $Tag->error.

=item code

Returns the generated code. Generates one if not done previously in session.

=item image

Returns the full URL path to the image (based on image directory). 

=item relative_image

Returns a relative URL path to the image.

=item image_tag

Returns an image tag as generated by Interchange's [image] tag.

=back

The additional options are:

=over 4

=item length

Length of the input for the captcha. Default is 4 characters.

=item image-subdir

The image subdirectory (based in images directory) which will
be used.

=item image-path

The base path for URL generation. Default is the Interchange IMAGE_DIR
variable.

=item image-location

The directory where image files will be generated. Default is the
Interchange IMAGE_DIR variable based in the Interchange DOCROOT
variable, with the subdirectory above, i.e. C<[var DOCROOT][var IMAGE_DIR]/captcha>.

=item guess 

The input from the user when the function is C<check>. Default is the
contents of [cgi mv_captcha_guess].

=item source 

The captcha base to guess against for the C<check> function. Default is the
contents of the last-generated captcha, or [cgi mv_captcha_source].

=back

=head1 PREREQUISITES

Authen::Captcha

=head1 AUTHOR

Mike Heins, <mike AT THE DOMAIN perusion.com>.

EOD
